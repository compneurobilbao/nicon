# -*- coding: utf-8 -*-
import nicon
import os

import numpy as np
import nibabel as nib
from os.path import join as opj
from nilearn.image import resample_img

def correct_dwi_conmat(atlas, subject):
    """
    This function cleans the conmat generated by mrtrix3 pipeline
    
    Possible errors: If the ROIs are too small in the atlas, when transforming
    to DWI space, some may dissapear. This would create conmats with smaller #
    of rois than the original atlas.
    """

    conmat = opj(folder_path, subject) # TODO: folder_path

    img_data = nib.load(atlas).get_data()
    conmat_data = np.loadtxt(conmat)

    rois = np.unique(img_data)[1:]-1
    return conmat_data[np.ix_(rois, rois)]


def aal_atlas_to_subject_space(OUTPUT_DIR, SUBJECT):
    
    path = os.path.dirname(nicon.__file__)
    atlas_path = opj(path, 'atlas', 'aal_09c.nii.gz')
    preproc_data_path = opj(OUTPUT_DIR,
                            'fmriprep',
                            SUBJECT,
                            'func')
    output_atlas_path = opj(OUTPUT_DIR, 
                            'fmriprep', 
                            SUBJECT,
                            'func',
                            'aal_bold_space.nii.gz')
            
    for file in os.listdir(preproc_data_path):
        if file.endswith('preproc.nii.gz'):
            preproc_file = opj(preproc_data_path, file)
        
    
    atlas_img = nib.load(atlas_path)
    fmri = nib.load(preproc_file)
    resampled_atlas = resample_img(atlas_img, target_affine=fmri.affine,
                                   interpolation='nearest')
    nib.save(resampled_atlas, output_atlas_path)
    
    return output_atlas_path



